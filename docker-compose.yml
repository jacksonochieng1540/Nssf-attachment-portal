version: "3.8"

services:
  db:
    image: postgres:15
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    command: gunicorn nssf_attachment_portal.wsgi:application --bind 0.0.0.0:8000 --workers 3
    env_file: .env
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app:rw
      - static_volume:/static
      - media_volume:/media
    expose:
      - "8000"

  nginx:
    image: nginx:stable
    restart: always
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - static_volume:/vol/static:ro
      - media_volume:/vol/media:ro
      - ./nginx/nginx_default.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - NGINX_HOST=${NGINX_HOST:-localhost}

volumes:
  postgres_data:
  static_volume:
  media_volume:
